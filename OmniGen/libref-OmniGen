#!/usr/bin/env bash

source /etc/AIInAAL/AIInAAL_path
aiinaalpkg=OmniGen

AIInAAL_update_OmniGen () {
  cd $AIInAALdir/$aiinaalpkg
  git fetch --all
  git branch backup-master
  git reset --hard origin/master
  git pull
  rm ./libref-$aiinaalpkg*
  rm ./requirements_$aiinaalpkg*
  wget https://raw.githubusercontent.com/JT-Gresham/AIInAAL/main/OmniGen/libref-$aiinaalpkg
  wget https://raw.githubusercontent.com/JT-Gresham/AIInAAL/main/OmniGen/user_customize_$aiinaalpkg_example.sh
  wget https://raw.githubusercontent.com/JT-Gresham/AIInAAL/main/OmniGen/requirements_$aiinaalpkg.txt
  pip install -r requirements_$aiinaalpkg.txt
  cd $aiinaalpkg
  if grep -Fxq "import intel_extension_for_pytorch as ipex" pipeline.py
    then
      echo "Intel extensions found in pipeline.py...skipping"
    else
      sed -i 's|import torch|import torch\nimport intel_extension_for_pytorch as ipex|g' pipeline.py
  fi
  if grep -Fxq "else 'xpu'" pipeline.py
    then
      echo "Device set to XPU in pipeline.py...skipping"
    else
      sed -i 's|else \x27cpu\x27|else \x27xpu\x27|g' pipeline.py
  fi
  if grep -Fxq "import intel_extension_for_pytorch as ipex" model.py
    then
      echo "Intel extensions found in model.py...skipping"
    else
      sed -i 's|import torch.nn as nn|import torch.nn as nn\nimport intel_extension_for_pytorch as ipex|g' model.py
  fi
  if grep -Fxq "import intel_extension_for_pytorch as ipex" transformer.py
    then
      echo "Intel extensions found in transformer.py...skipping"
    else
      sed -i 's|import torch.utils.checkpoint|import torch.utils.checkpoint\nimport intel_extension_for_pytorch as ipex\nimport intel_extension_for_transformers|g' transformer.py
  fi
  if grep -Fxq "import intel_extension_for_pytorch as ipex" scheduler.py
    then
      echo "Intel extensions found in scheduler.py...skipping"
    else
      sed -i 's|import torch|import torch\nimport intel_extension_for_pytorch as ipex\nimport intel_extension_for_transformers|g' scheduler.py
  fi
  if grep -Fxq "import intel_extension_for_pytorch as ipex" utils.py
    then
      echo "Intel extensions found in utils.py...skipping"
    else
      sed -i 's|import torch|import torch\nimport intel_extension_for_pytorch as ipex\nimport intel_extension_for_transformers|g' utils.py
  fi
  if grep -Fxq "import intel_extension_for_pytorch as ipex" processor.py
    then
      echo "Intel extensions found in processor.py...skipping"
    else
      sed -i 's|import torch|import torch\nimport intel_extension_for_pytorch as ipex\nimport intel_extension_for_transformers|g' processor.py
  fi
#rm -R "$AIInAALdir/$aiinaalpkg/MyOmniGenProjects"
#rm -R "$AIInAALdir/$aiinaalpkg/models/loras"
#rm -R "$AIInAALdir/$aiinaalpkg/wildcards"
#rm -R "$AIInAALdir/$aiinaalpkg/sdxl_styles"
#rm -R "$AIInAALdir/$aiinaalpkg/models/vae"
#rm -R "$AIInAALdir/$aiinaalpkg/models/vae_approx"
#ln -sf "$AIInAALdir/shared/MyOmniGenProjects" "$AIInAALdir/$aiinaalpkg/MyOmniGenProjects"
#ln -sf "$AIInAALdir/shared/loras/t2i" "$AIInAALdir/$aiinaalpkg/models/loras"
#ln -sf "$AIInAALdir/shared/wildcards/Fooocus" "$AIInAALdir/$aiinaalpkg/wildcards"
#ln -sf "$AIInAALdir/shared/sdxl_styles/Fooocus" "$AIInAALdir/$aiinaalpkg/sdxl_styles"
#ln -sf "$AIInAALdir/shared/VAEs/t2i/vae/" "$AIInAALdir/$aiinaalpkg/models/vae"
#ln -sf "$AIInAALdir/shared/VAEs/t2i/vae_approx/" "$AIInAALdir/$aiinaalpkg/models/vae_approx"
cd $pdirectory
$AIInAALdir/$aiinaalpkg/user_customize_$aiinaalpkg.sh
cd $AIInAALdir/$aiinaalpkg
}

OmniGen-exit () {
    kill $(pidof python $AIInAALdir/$aiinaalpkg)
}
